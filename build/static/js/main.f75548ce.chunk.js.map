{"version":3,"sources":["components/BoardInfo/index.js","components/BoardInfo/BoardInfo.js","components/BoardHeader/index.js","components/BoardHeader/BoardHeader.js","utils/utils.js","components/Message/index.js","components/Message/Message.js","components/MessageSelf/index.js","components/MessageSelf/MessageSelf.js","components/BoardWindow/index.js","components/BoardWindow/BoardWindow.js","utils/index.js","components/BoardSender/index.js","components/BoardSender/BoardSender.js","core/emmiter.js","components/Board/index.js","components/Board/Board.js","components/Autorization/index.js","components/Autorization/Autorization.js","App.js","index.js"],"names":["BoardInfo","users","active","onClose","usersKeys","Object","keys","className","length","onClick","map","item","idx","user","key","src","avatar","alt","name","secname","BoardHeader","props","state","isActive","countMember","openInfo","bind","this","setState","currentState","Component","dispatcher","obj","event","CustomEvent","detail","message","document","dispatchEvent","timeFormat","num","Message","onLoad","date","text","color","type","styledColor","styledBgColor","backgroundColor","hour","getHours","minute","getMinutes","useEffect","timeBlock","textBlock","imageBlock","style","nameBlock","renderTypeMessage","MessageSelf","BoardWindow","messages","wrapperRef","React","createRef","lastMessageUserId","renderMessage","scrollBottom","forEach","userData","user_id","currentMessage","beforeMessage","afterMessage","push","chunk","token","wrapper","current","scrollTo","scrollHeight","ref","utils","BoardSender","dispatchMessage","setText","value","trim","data","id","Date","keyCode","onChange","e","target","onKeyDown","keyEvent","placeholder","userUUIDs","faker","random","uuid","UserNames","firstName","UserSurnames","lastName","UserColors","image","internet","replace","toUpperCase","WebsocketMockAdapter","subscriber","deelay","count","initSub","setInterval","createData","clearInterval","index","number","min","max","lorem","words","Board","mocks","getUsers","addEventListener","init","messageEventListener","Autorization","login","pass","isError","setInput","element","preventDefault","localStorage","setItem","onLogin","dispatchData","App","updateToken","getItem","ReactDOM","render","getElementById"],"mappings":"mVAEeA,G,wBCEG,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC5BC,EAAYC,OAAOC,KAAKL,GAuB9B,OACE,yBAAKM,UAAS,qBAAgBL,EAAS,qBAAuB,KAC5D,yBAAKK,UAAU,sBACb,wCACA,6BAAMH,EAAUI,OAAhB,IAAyBJ,EAAUI,OAAS,EAAI,UAAY,UAC5D,4BACEC,QAAS,kBAAMN,KACfI,UAAU,oCAGd,yBAAKA,UAAU,eA9BVH,EAAUM,KAAI,SAACC,EAAMC,GAC1B,IAAMC,EAAOZ,EAAMU,GAEnB,OACE,yBAAKG,IAAKF,EAAKL,UAAU,gCACvB,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,oBAAoBQ,IAAKF,EAAKG,OAAQC,IAAKJ,EAAKK,QAEjE,yBAAKX,UAAU,mBACb,yBAAKA,UAAU,oBACb,uBAAGA,UAAU,oBAAb,UACMM,EAAKK,KADX,YACmBL,EAAKM,oBCjBvBC,E,kDCKb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAEDC,MAAQ,CACXrB,MAAO,EAAKoB,MAAMpB,MAClBsB,UAAU,GAGZ,EAAKC,YAAcnB,OAAOC,KAAK,EAAKe,MAAMpB,OAAOO,OACjD,EAAKiB,SAAW,EAAKA,SAASC,KAAd,gBATC,E,4CAYnB,WACEC,KAAKC,UAAS,SAACN,GACb,IAAMO,EAAY,eAAOP,GAEzB,OADAO,EAAaN,UAAYM,EAAaN,SAC/BM,O,oBAIX,WAAU,IAAD,OACP,OACE,oCACE,yBAAKtB,UAAU,gBACb,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,qBACb,wCACA,6BAAMoB,KAAKH,YAAX,IAAyBG,KAAKH,YAAc,EAAI,UAAY,WAE9D,4BACEf,QAAS,kBAAM,EAAKgB,YACpBlB,UAAU,qBAEV,yBAAKA,UAAU,8BAIrB,kBAAC,EAAD,CACEL,OAAQyB,KAAKL,MAAMC,SACnBtB,MAAO0B,KAAKL,MAAMrB,MAClBE,QAASwB,KAAKF,gB,GAzCiBK,aCN5BC,G,MAAa,SAACC,GACvB,IAAMC,EAAQ,IAAIC,YAAY,UAAW,CACvCC,OAAQ,CACNC,QAAQ,eAAKJ,MAIjBK,SAASC,cAAcL,KAEdM,EAAa,SAACC,GAAD,OAASA,EAAM,GAAN,WAAeA,GAAQA,GCP3CC,G,MCGC,SAAC,GAAyB,IAAvBL,EAAsB,EAAtBA,QAASM,EAAa,EAAbA,OAExB1B,EAQEoB,EARFpB,OACAE,EAOEkB,EAPFlB,KACAC,EAMEiB,EANFjB,QACAwB,EAKEP,EALFO,KACAC,EAIER,EAJFQ,KACAC,EAGET,EAHFS,MACAC,EAEEV,EAFFU,KACAlC,EACEwB,EADFxB,IAGImC,EAAc,CAClBF,MAAM,IAAD,OAAMA,IAGPG,EAAgB,CACpBC,gBAAgB,IAAD,OAAMJ,IAGjBK,EAAOX,EAAWI,EAAKQ,YACvBC,EAASb,EAAWI,EAAKU,cA6E/B,OAJAC,qBAAU,WACR,OAAOZ,OAIP,yBAAKnC,UAAU,WACb,yBAAKA,UAAU,kBA7EO,WACxB,IAAMgD,EAAY,0BAAMhD,UAAU,qBAAhB,UAAwC2C,EAAxC,YAAgDE,IAC5DI,EAAY,6BAAMZ,GAElBa,EACJ,yBAAKlD,UAAU,gBAAgBmD,MAAOV,GACpC,yBAAKzC,UAAU,sBAAsBQ,IAAKC,EAAQC,IAAKC,KAIrDyC,EACJ,0BAAMpD,UAAU,oBAAoBmD,MAAOX,GAA3C,UACM7B,EADN,YACcC,IAIhB,OAAY,IAARP,GAAsB,YAATkC,EAEb,oCACE,yBAAKvC,UAAU,eACb,yBAAKA,UAAU,oBACZoD,EACAJ,GAEFC,IAML5C,EAAM,GAAc,YAATkC,EAEX,oCACE,yBAAKvC,UAAU,eACb,yBAAKA,UAAU,oBACZgD,GAEFC,IAML5C,EAAM,GAAc,WAATkC,EAEX,oCACGW,EACD,yBAAKlD,UAAU,iCACb,yBAAKA,UAAU,oBACZgD,GAEFC,IAOP,oCACGC,EACD,yBAAKlD,UAAU,iCACb,yBAAKA,UAAU,oBACZoD,EACAJ,GAEFC,IAaFI,OCxGMC,G,MCGK,SAAC,GAAyB,IAAvBzB,EAAsB,EAAtBA,QAASM,EAAa,EAAbA,OAE5B1B,EAQEoB,EARFpB,OACAE,EAOEkB,EAPFlB,KACAC,EAMEiB,EANFjB,QACAwB,EAKEP,EALFO,KACAC,EAIER,EAJFQ,KACAC,EAGET,EAHFS,MACAC,EAEEV,EAFFU,KACAlC,EACEwB,EADFxB,IAGImC,EAAc,CAClBF,MAAM,IAAD,OAAMA,IAGPG,EAAgB,CACpBC,gBAAgB,IAAD,OAAMJ,IAGjBK,EAAOX,EAAWI,EAAKQ,YACvBC,EAASb,EAAWI,EAAKU,cAE/BC,qBAAU,WACR,OAAOZ,OA0ET,OACE,yBAAKnC,UAAU,gBACb,yBAAKA,UAAU,kBAzEO,WACxB,IAAMgD,EAAY,0BAAMhD,UAAU,sBAAhB,UAAyC2C,EAAzC,YAAiDE,IAC7DI,EAAY,6BAAMZ,GAElBa,EACJ,yBAAKlD,UAAU,sBAAsBmD,MAAOV,GAC1C,yBAAKzC,UAAU,qBAAqBQ,IAAKC,EAAQC,IAAKC,KAIpDyC,EACJ,0BAAMpD,UAAU,oBAAoBmD,MAAOX,GAA3C,UACM7B,EADN,YACcC,IAIhB,OAAY,IAARP,GAAsB,YAATkC,EAEb,oCACE,yBAAKvC,UAAU,qBACb,yBAAKA,UAAU,oBACZoD,EACAJ,GAEFC,IAML5C,EAAM,GAAc,YAATkC,EAEX,oCACE,yBAAKvC,UAAU,qBACb,yBAAKA,UAAU,oBACZgD,GAEFC,IAML5C,EAAM,GAAc,WAATkC,EAEX,oCACE,yBAAKvC,UAAU,6CACb,yBAAKA,UAAU,oBACZgD,GAEFC,GAEFC,GAML,oCACE,yBAAKlD,UAAU,6CACb,yBAAKA,UAAU,oBACZoD,EACAJ,GAEFC,GAEFC,GAQAG,OCxGME,E,kDCMb,WAAYzC,GAAQ,IAAD,8BACjB,cAAMA,IAEDC,MAAQ,CACXyC,SAAU,EAAK1C,MAAM0C,UAGvB,EAAKC,WAAaC,IAAMC,YACxB,EAAKC,kBAAoB,GACzB,EAAKC,cAAgB,EAAKA,cAAc1C,KAAnB,gBACrB,EAAK2C,aAAe,EAAKA,aAAa3C,KAAlB,gBAVH,E,iDAanB,WAAiB,IAAD,OACVqC,EAAW,GAuBf,OArBApC,KAAKL,MAAMyC,SAASO,SAAQ,SAAClC,EAASxB,GACpC,IAAM2D,EAAW,EAAKlD,MAAMpB,MAAMmC,EAAQoC,SACpCC,EAAc,2BAAOF,GAAanC,GAClCsC,EAAgB,EAAKpD,MAAMyC,SAASnD,EAAM,GAC1C+D,EAAe,EAAKrD,MAAMyC,SAASnD,EAAM,GAE/C6D,EAAe7D,IAAM,EAEf8D,GAAiBA,EAAcF,UAAYC,EAAeD,UAC9DC,EAAe7D,IAAMmD,EAASnD,EAAM,GAAGA,IAAM,GAGzC+D,GAAgBA,EAAaH,UAAYC,EAAeD,QAC5DC,EAAe3B,KAAO,UAEtB2B,EAAe3B,KAAO,SAGxBiB,EAASa,KAAKH,MAGTV,EAASrD,KAAI,SAAC0B,EAASxB,GAC5B,IAAIiE,EACF,kBAAC,EAAD,CACEnC,OAAQ,EAAK2B,aACbvD,IAAKF,EACLwB,QAASA,IAcb,OAVIA,EAAQoC,UAAY,EAAKnD,MAAMyD,QACjCD,EACE,kBAAC,EAAD,CACEnC,OAAQ,EAAK2B,aACbvD,IAAKF,EACLwB,QAASA,KAKRyC,O,0BAIX,WACE,IAAME,EAAUpD,KAAKqC,WAAWgB,QAChCD,EAAQE,SAAS,EAAGF,EAAQG,gB,oBAG9B,WACE,OACE,yBAAK3E,UAAU,eAAe4E,IAAKxD,KAAKqC,YACtC,yBAAKzD,UAAU,gCACZoB,KAAKyC,sB,GAtEyBtC,aCL1BsD,G,MAAAA,GCAAC,E,kDCKb,WAAYhE,GAAQ,IAAD,8BACjB,cAAMA,IAEDC,MAAQ,CACXT,KAAM,EAAKQ,MAAMR,KACjB+B,KAAM,IAGR,EAAKR,QAAU,GAEf,EAAKkD,gBAAkB,EAAKA,gBAAgB5D,KAArB,gBACvB,EAAK6D,QAAU,EAAKA,QAAQ7D,KAAb,gBAXE,E,2CAcnB,SAAQ8D,GACN7D,KAAKC,UAAS,SAACN,GACb,IAAMO,EAAY,eAAOP,GAEzB,OADAO,EAAae,KAAO4C,EACb3D,O,6BAIX,WACE,IAAMe,EAAOjB,KAAKL,MAAMsB,KAAK6C,OAE7B,GAAK7C,EAAL,CAIA,IAAM8C,EAAO,CACXC,GAAIhE,KAAKL,MAAMT,KAAK8E,GACpBhD,KAAM,IAAIiD,KACVpB,QAAS7C,KAAKL,MAAMT,KAAK8E,GACzB/C,QAGFjB,KAAKS,QAAL,eAAmBsD,GACnBN,EAAMrD,WAAWJ,KAAKS,SACtBT,KAAK4D,QAAQ,O,sBAGf,YACkB,KADI,EAAXM,SAEPlE,KAAK2D,oB,oBAIT,WAAU,IAAD,OACP,OACE,yBAAK/E,UAAU,gBACb,2BACEuF,SAAU,SAACC,GAAD,OAAO,EAAKR,QAAQQ,EAAEC,OAAOR,QACvCS,UAAW,SAACF,GAAD,OAAO,EAAKG,SAASH,IAChCP,MAAO7D,KAAKL,MAAMsB,KAClBrC,UAAU,sBACV4F,YAAY,uBAEd,4BACE1F,QAAS,kBAAM,EAAK6E,mBACpB/E,UAAU,2B,GA5DqBuB,a,gBCJ5BsE,EAAY,CACvBC,IAAMC,OAAOC,OACbF,IAAMC,OAAOC,OACbF,IAAMC,OAAOC,OACbF,IAAMC,OAAOC,OACbF,IAAMC,OAAOC,OACbF,IAAMC,OAAOC,OACbF,IAAMC,OAAOC,OACbF,IAAMC,OAAOC,QAGFC,EAAY,CAAC,GAAD,OACpBH,IAAMnF,KAAKuF,aADS,UAEpBJ,IAAMnF,KAAKuF,aAFS,UAGpBJ,IAAMnF,KAAKuF,aAHS,UAIpBJ,IAAMnF,KAAKuF,aAJS,UAKpBJ,IAAMnF,KAAKuF,aALS,UAMpBJ,IAAMnF,KAAKuF,aANS,UAOpBJ,IAAMnF,KAAKuF,aAPS,UAQpBJ,IAAMnF,KAAKuF,cAGHC,EAAe,CAAC,GAAD,OACvBL,IAAMnF,KAAKyF,YADY,UAEvBN,IAAMnF,KAAKyF,YAFY,UAGvBN,IAAMnF,KAAKyF,YAHY,UAIvBN,IAAMnF,KAAKyF,YAJY,UAKvBN,IAAMnF,KAAKyF,YALY,UAMvBN,IAAMnF,KAAKyF,YANY,UAOvBN,IAAMnF,KAAKyF,YAPY,UAQvBN,IAAMnF,KAAKyF,aAcHC,GAVXP,IAAMQ,MAAM7F,SACZqF,IAAMQ,MAAM7F,SACZqF,IAAMQ,MAAM7F,SACZqF,IAAMQ,MAAM7F,SACZqF,IAAMQ,MAAM7F,SACZqF,IAAMQ,MAAM7F,SACZqF,IAAMQ,MAAM7F,SACZqF,IAAMQ,MAAM7F,SAGY,CACxBqF,IAAMS,SAASjE,QAAQkE,QAAQ,IAAI,IAAIC,cACvCX,IAAMS,SAASjE,QAAQkE,QAAQ,IAAI,IAAIC,cACvCX,IAAMS,SAASjE,QAAQkE,QAAQ,IAAI,IAAIC,cACvCX,IAAMS,SAASjE,QAAQkE,QAAQ,IAAI,IAAIC,cACvCX,IAAMS,SAASjE,QAAQkE,QAAQ,IAAI,IAAIC,cACvCX,IAAMS,SAASjE,QAAQkE,QAAQ,IAAI,IAAIC,cACvCX,IAAMS,SAASjE,QAAQkE,QAAQ,IAAI,IAAIC,cACvCX,IAAMS,SAASjE,QAAQkE,QAAQ,IAAI,IAAIC,gBAG5BC,EAAb,WACE,WAAYC,GAA4B,IAAhBC,EAAe,uDAAN,IAAM,oBACrCxF,KAAKuF,WAAaA,EAClBvF,KAAKwF,OAASA,EAHlB,wCAME,WAAQ,IAAD,OACDC,EAAQ,EAENC,EAAUC,aAAY,WAC1B,EAAKJ,WAAW,EAAKK,eACrBH,GAAS,IAEI,IACXI,cAAcH,KAEf1F,KAAKwF,UAhBZ,wBAmBE,WACE,IAAMM,EAAQpB,IAAMC,OAAOoB,OAAO,CAAEC,IAAK,EAAGC,IAAK,IAEjD,MAAO,CACLjC,GAAIU,IAAMC,OAAOC,OAEjB5D,KAAM,IAAIiD,KACVpB,QAAS4B,EAAUqB,GACnB7E,KAAMyD,IAAMwB,MAAMC,MAAM,MA3B9B,sBA+BE,WAGE,IAFA,IAAM7H,EAAQ,GAELwH,EAAQ,EAAGA,EAAQ,EAAGA,IAC7BxH,EAAMmG,EAAUqB,IAAU,CACxBvG,KAAMsF,EAAUiB,GAChBtG,QAASuF,EAAae,GACtB5E,MAAO+D,EAAWa,GAClBzG,OAAO,uCAAD,OAAyCwF,EAAUiB,GAAnD,YAA6Df,EAAae,GAA1E,uBAA+Fb,EAAWa,GAA1G,eACN9B,GAAIS,EAAUqB,IAalB,OARAxH,EAAM,OAAW,CACfiB,KAAM,OACNC,QAAS,YACT0B,MAAO,SACP7B,OAAO,kFACP2E,GAAI,SAGC1F,MArDX,KCvDe8H,E,kDCSb,WAAY1G,GAAQ,IAAD,8BACjB,cAAMA,IAED2G,MAAQ,IAAIf,EAAqB7B,EAAMrD,WAAY,KACxD,EAAKT,MAAQ,CACXrB,MAAO,EAAK+H,MAAMC,WAClBnD,MAAO,EAAKzD,MAAMyD,MAClBf,SAAU,IAPK,E,wDAWnB,WAAwB,IAAD,OACrB1B,SAAS6F,iBAAiB,WAAW,YAAiB,IAAd/F,EAAa,EAAbA,OACtC,EAAKP,UAAS,SAACN,GACb,IAAMO,EAAY,eAAOP,GAEzB,OADAO,EAAakC,SAASa,KAAKzC,EAAOC,SAC3BP,U,+BAKb,WACEF,KAAKqG,MAAMG,OACXxG,KAAKyG,yB,oBAGP,WACE,OACE,yBAAK7H,UAAU,SACb,kBAAC,EAAD,CAAaN,MAAO0B,KAAKL,MAAMrB,QAC/B,kBAAC,EAAD,CACE6E,MAAOnD,KAAKL,MAAMwD,MAClB7E,MAAO0B,KAAKL,MAAMrB,MAClB8D,SAAUpC,KAAKL,MAAMyC,WAEvB,kBAAC,EAAD,CAAalD,KAAMc,KAAKL,MAAMrB,MAAM0B,KAAKL,MAAMwD,c,GApCpBhD,aCRpBuG,G,0DCEb,WAAYhH,GAAQ,IAAD,8BACjB,cAAMA,IAEDC,MAAQ,CACXgH,MAAO,GACPC,KAAM,GACNC,SAAS,GAGX,EAAKC,SAAW,EAAKA,SAAS/G,KAAd,gBATC,E,4CAYnB,SAASgH,GAAU,IACTxH,EAAgBwH,EAAhBxH,KAAMsE,EAAUkD,EAAVlD,MAEd7D,KAAKC,UAAS,SAACN,GACb,IAAMO,EAAY,eAAOP,GAEzB,OADAO,EAAaX,GAAQsE,EAAMC,OACpB5D,O,0BAIX,SAAaI,GACXA,EAAM0G,iBAEN,IAGIH,GAAU,EAUd,GAbc,SAKV7G,KAAKL,MAAMgH,QACbE,GAAU,GALC,SAQT7G,KAAKL,MAAMiH,OACbC,GAAU,IAGPA,EAGH,OAFAI,aAAaC,QAAQ,YAZT,cAaZlH,KAAKN,MAAMyH,QAbC,SAiBdnH,KAAKC,UAAS,SAACN,GACb,IAAMO,EAAY,eAAOP,GAEzB,OADAO,EAAa2G,SAAU,EAChB3G,O,oBAIX,WAAU,IAAD,OACP,OACE,yBAAKtB,UAAU,SACb,yBAAKA,UAAU,eAAf,sBACA,0BAAMA,UAAU,cACd,2BACEuF,SAAU,SAACC,GAAD,OAAO,EAAK0C,SAAS1C,EAAEC,SACjCR,MAAO7D,KAAKL,MAAMgH,MAClBpH,KAAK,QACLX,UAAU,oBACV4F,YAAY,eAEd,2BACEL,SAAU,SAACC,GAAD,OAAO,EAAK0C,SAAS1C,EAAEC,SACjCR,MAAO7D,KAAKL,MAAMiH,KAClBrH,KAAK,OACLX,UAAU,4CACV4F,YAAY,cAEbxE,KAAKL,MAAMkH,QACV,yBAAKjI,UAAU,qBAAf,2BACA,GACF,4BAAQE,QAAS,SAACsF,GAAD,OAAO,EAAKgD,aAAahD,IAAIxF,UAAU,mBAAxD,iB,GA1EgCuB,cCkD3BkH,E,kDA9Cb,WAAY3H,GAAQ,IAAD,8BACjB,cAAMA,IAEDC,MAAQ,CACXwD,MAAO,MAGT,EAAKmE,YAAc,EAAKA,YAAYvH,KAAjB,gBAPF,E,+CAUnB,SAAYoD,GACVnD,KAAKC,UAAS,SAACN,GACb,IAAMO,EAAY,eAAOP,GAEzB,OADAO,EAAaiD,MAAQA,EACdjD,O,+BAIX,WACE,IAAMiD,EAAQ8D,aAAaM,QAAQ,aAE9BpE,GAILnD,KAAKC,UAAS,SAACN,GACb,IAAMO,EAAY,eAAOP,GAEzB,OADAO,EAAaiD,MAAQA,EACdjD,O,oBAIX,WACE,OACE,yBAAKtB,UAAU,OACb,4BAAQA,UAAU,cACfoB,KAAKL,MAAMwD,MACR,kBAAC,EAAD,CAAOA,MAAOnD,KAAKL,MAAMwD,QACzB,kBAAC,EAAD,CAAcgE,QAASnH,KAAKsH,oB,GAvCxBnH,a,QCElBqH,IAASC,OAAO,kBAAC,EAAD,MAAQ/G,SAASgH,eAAe,U","file":"static/js/main.f75548ce.chunk.js","sourcesContent":["import BoardInfo from './BoardInfo';\r\n\r\nexport default BoardInfo;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './BoardInfo.scss';\r\n\r\nconst BoardInfo = ({ users, active, onClose }) => {\r\n  const usersKeys = Object.keys(users);\r\n\r\n  const renderUser = () => {\r\n    return usersKeys.map((item, idx) => {\r\n      const user = users[item];\r\n\r\n      return (\r\n        <div key={idx} className=\"board-user flex align_center\">\r\n          <div className=\"board-user__picture\">\r\n            <img className=\"board-user__image\" src={user.avatar} alt={user.name} />\r\n          </div>\r\n          <div className=\"board-user__bar\">\r\n            <div className=\"flex align_botom\">\r\n              <b className=\"board-user__name\">\r\n                {`${user.name} ${user.secname}`}\r\n              </b>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className={`board-info ${active ? 'board-info--active' : ''}`}>\r\n      <div className=\"board-info__header\">\r\n        <b>Chat room</b>\r\n        <div>{usersKeys.length} {usersKeys.length > 1 ? 'members' : 'member'}</div>\r\n        <button\r\n          onClick={() => onClose()}\r\n          className=\"button-close board-info__close\"\r\n        />\r\n      </div>\r\n      <div className=\"board-users\">\r\n        {renderUser()}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nBoardInfo.propTypes = {\r\n  isActive: PropTypes.bool,\r\n  users: PropTypes.object,\r\n  onClose: PropTypes.func,\r\n};\r\n\r\nexport default BoardInfo;\r\n","import BoardHeader from './BoardHeader';\r\n\r\nexport default BoardHeader;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './BoardHeader.scss';\r\n\r\nimport BoardInfo from '../BoardInfo';\r\n\r\nexport default class BoardHeader extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      users: this.props.users,\r\n      isActive: false,\r\n    };\r\n\r\n    this.countMember = Object.keys(this.props.users).length;\r\n    this.openInfo = this.openInfo.bind(this);\r\n  }\r\n\r\n  openInfo() {\r\n    this.setState((state) => {\r\n      const currentState = {...state};\r\n      currentState.isActive = !currentState.isActive;\r\n      return currentState;\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"board-header\">\r\n          <div className=\"flex align_center\">\r\n            <div className=\"board-header__bar\">\r\n              <b>Chat room</b>\r\n              <div>{this.countMember} {this.countMember > 1 ? 'members' : 'member'}</div>\r\n            </div>\r\n            <button\r\n              onClick={() => this.openInfo()}\r\n              className=\"board-header__btn\"\r\n            >\r\n              <div className=\"board-header__btn--dot\"></div>\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <BoardInfo\r\n          active={this.state.isActive}\r\n          users={this.state.users}\r\n          onClose={this.openInfo}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nBoardHeader.propTypes = {\r\n  users: PropTypes.object,\r\n};\r\n","export const dispatcher = (obj) => {\r\n    const event = new CustomEvent(\"message\", {\r\n      detail: {\r\n        message: {...obj}\r\n      }\r\n    });\r\n\r\n    document.dispatchEvent(event);\r\n};\r\nexport const timeFormat = (num) => num < 10 ? `0${num}` : num;\r\n","import Message from './Message';\r\n\r\nexport default Message;","import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { timeFormat } from '../../utils/utils';\r\nimport './Message.scss';\r\n\r\nconst Message = ({ message, onLoad }) => {\r\n  const {\r\n    avatar, \r\n    name,\r\n    secname,\r\n    date,\r\n    text,\r\n    color,\r\n    type,\r\n    idx\r\n  } = message;\r\n\r\n  const styledColor = {\r\n    color: `#${color}`,\r\n  };\r\n\r\n  const styledBgColor = {\r\n    backgroundColor: `#${color}`,\r\n  };\r\n  \r\n  const hour = timeFormat(date.getHours());\r\n  const minute = timeFormat(date.getMinutes());\r\n\r\n  const renderTypeMessage = () => {\r\n    const timeBlock = <span className=\"message-bar__time\">{`${hour}:${minute}`}</span>;\r\n    const textBlock = <div>{text}</div>;\r\n  \r\n    const imageBlock = (\r\n      <div className=\"message-image\" style={styledBgColor}>\r\n        <img className=\"message-image__item\" src={avatar} alt={name} />\r\n      </div>\r\n    );\r\n\r\n    const nameBlock = (\r\n      <span className=\"message-bar__name\" style={styledColor}>\r\n        {`${name} ${secname}`}\r\n      </span>\r\n    );\r\n\r\n    if (idx === 0 && type === 'current') {\r\n      return (\r\n        <>\r\n          <div className=\"message-bar\">\r\n            <div className=\"flex align_botom\">\r\n              {nameBlock}\r\n              {timeBlock}\r\n            </div>\r\n            {textBlock}\r\n          </div>\r\n        </>\r\n      );\r\n    }\r\n\r\n    if (idx > 0 && type === 'current') {\r\n      return (\r\n        <>\r\n          <div className=\"message-bar\">\r\n            <div className=\"flex align_botom\">\r\n              {timeBlock}\r\n            </div>\r\n            {textBlock}\r\n          </div>\r\n        </>\r\n      );\r\n    }\r\n\r\n    if (idx > 0 && type === 'finish') {\r\n      return (\r\n        <>\r\n          {imageBlock}\r\n          <div className=\"message-bar message-bar--last\">\r\n            <div className=\"flex align_botom\">\r\n              {timeBlock}\r\n            </div>\r\n            {textBlock}\r\n          </div>\r\n        </>\r\n      );\r\n    }\r\n\r\n    return(\r\n      <>\r\n        {imageBlock}\r\n        <div className='message-bar message-bar--last'>\r\n          <div className=\"flex align_botom\">\r\n            {nameBlock}\r\n            {timeBlock}\r\n          </div>\r\n          {textBlock}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n\r\n  useEffect(() => {\r\n    return onLoad();\r\n  });\r\n\r\n  return (\r\n    <div className=\"message\">\r\n      <div className=\"flex align_end\">\r\n        {renderTypeMessage()}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nMessage.propTypes = {\r\n  onLoad: PropTypes.func,\r\n  message: PropTypes.object,\r\n};\r\n\r\nexport default Message;\r\n","import MessageSelf from './MessageSelf';\r\n\r\nexport default MessageSelf;","import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { timeFormat } from '../../utils/utils';\r\nimport './MessageSelf.scss';\r\n\r\nconst MessageSelf = ({ message, onLoad }) => {\r\n  const {\r\n    avatar, \r\n    name,\r\n    secname,\r\n    date,\r\n    text,\r\n    color,\r\n    type,\r\n    idx\r\n  } = message;\r\n\r\n  const styledColor = {\r\n    color: `#${color}`,\r\n  };\r\n\r\n  const styledBgColor = {\r\n    backgroundColor: `#${color}`,\r\n  };\r\n  \r\n  const hour = timeFormat(date.getHours());\r\n  const minute = timeFormat(date.getMinutes());\r\n\r\n  useEffect(() => {\r\n    return onLoad();\r\n  });\r\n\r\n  const renderTypeMessage = () => {\r\n    const timeBlock = <span className=\"message-self__time\">{`${hour}:${minute}`}</span>;\r\n    const textBlock = <div>{text}</div>;\r\n  \r\n    const imageBlock = (\r\n      <div className=\"message-self__image\" style={styledBgColor}>\r\n        <img className=\"message-self__item\" src={avatar} alt={name} />\r\n      </div>\r\n    );\r\n\r\n    const nameBlock = (\r\n      <span className=\"message-bar__name\" style={styledColor}>\r\n        {`${name} ${secname}`}\r\n      </span>\r\n    );\r\n\r\n    if (idx === 0 && type === 'current') {\r\n      return (\r\n        <>\r\n          <div className=\"message-self__bar\">\r\n            <div className=\"flex align_botom\">\r\n              {nameBlock}\r\n              {timeBlock}\r\n            </div>\r\n            {textBlock}\r\n          </div>\r\n        </>\r\n      );\r\n    }\r\n\r\n    if (idx > 0 && type === 'current') {\r\n      return (\r\n        <>\r\n          <div className=\"message-self__bar\">\r\n            <div className=\"flex align_botom\">\r\n              {timeBlock}\r\n            </div>\r\n            {textBlock}\r\n          </div>\r\n        </>\r\n      );\r\n    }\r\n\r\n    if (idx > 0 && type === 'finish') {\r\n      return (\r\n        <>\r\n          <div className=\"message-self__bar message-self__bar--last\">\r\n            <div className=\"flex align_botom\">\r\n              {timeBlock}\r\n            </div>\r\n            {textBlock}\r\n          </div>\r\n          {imageBlock}\r\n        </>\r\n      );\r\n    }\r\n\r\n    return(\r\n      <>\r\n        <div className='message-self__bar message-self__bar--last'>\r\n          <div className=\"flex align_botom\">\r\n            {nameBlock}\r\n            {timeBlock}\r\n          </div>\r\n          {textBlock}\r\n        </div>\r\n        {imageBlock}\r\n      </>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"message-self\">\r\n      <div className=\"flex align_end\">\r\n        {renderTypeMessage()}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nMessageSelf.propTypes = {\r\n  onLoad: PropTypes.func,\r\n  message: PropTypes.object,\r\n};\r\n\r\nexport default MessageSelf;","import BoardWindow from './BoardWindow';\r\n\r\nexport default BoardWindow;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './BoardWindow.scss';\r\n\r\nimport Message from '../Message';\r\nimport MessageSelf from '../MessageSelf';\r\n\r\nexport default class BoardWindow extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      messages: this.props.messages,\r\n    };\r\n\r\n    this.wrapperRef = React.createRef();\r\n    this.lastMessageUserId = '';\r\n    this.renderMessage = this.renderMessage.bind(this);\r\n    this.scrollBottom = this.scrollBottom.bind(this);\r\n  }\r\n\r\n  renderMessage() {\r\n    let messages = [];\r\n  \r\n    this.state.messages.forEach((message, idx) => {\r\n      const userData = this.props.users[message.user_id];\r\n      const currentMessage = {...userData, ...message};\r\n      const beforeMessage = this.state.messages[idx - 1];\r\n      const afterMessage = this.state.messages[idx + 1];\r\n\r\n      currentMessage.idx = 0;\r\n\r\n      if (!!beforeMessage && beforeMessage.user_id === currentMessage.user_id) {\r\n        currentMessage.idx = messages[idx - 1].idx + 1;\r\n      }\r\n\r\n      if (!!afterMessage && afterMessage.user_id === currentMessage.user_id) {\r\n        currentMessage.type = 'current';\r\n      } else {\r\n        currentMessage.type = 'finish';\r\n      }\r\n\r\n      messages.push(currentMessage);\r\n    });\r\n\r\n    return messages.map((message, idx) => {\r\n      let chunk = (\r\n        <Message\r\n          onLoad={this.scrollBottom}\r\n          key={idx}\r\n          message={message}\r\n        />\r\n      )\r\n\r\n      if (message.user_id === this.props.token) {\r\n        chunk = (\r\n          <MessageSelf\r\n            onLoad={this.scrollBottom}\r\n            key={idx}\r\n            message={message}\r\n          />\r\n        );\r\n      }\r\n\r\n      return chunk;\r\n    });\r\n  }\r\n\r\n  scrollBottom() {\r\n    const wrapper = this.wrapperRef.current;\r\n    wrapper.scrollTo(0, wrapper.scrollHeight);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"board-window\" ref={this.wrapperRef}>\r\n        <div className=\"flex flex_column align_start\">\r\n          {this.renderMessage()}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nBoardWindow.propTypes = {\r\n  token: PropTypes.string,\r\n  users: PropTypes.object,\r\n  messages: PropTypes.array,\r\n};\r\n","import * as utils from './utils';\r\n\r\nexport default utils;","import BoardSender from './BoardSender';\r\n\r\nexport default BoardSender;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './BoardSender.scss';\r\n\r\nimport utils from '../../utils';\r\n\r\nexport default class BoardSender extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      user: this.props.user,\r\n      text: '',\r\n    };\r\n\r\n    this.message = {};\r\n\r\n    this.dispatchMessage = this.dispatchMessage.bind(this);\r\n    this.setText = this.setText.bind(this);\r\n  }\r\n\r\n  setText(value) {\r\n    this.setState((state) => {\r\n      const currentState = {...state};\r\n      currentState.text = value;\r\n      return currentState;\r\n    })\r\n  }\r\n\r\n  dispatchMessage() {\r\n    const text = this.state.text.trim();\r\n\r\n    if (!text) {\r\n      return;\r\n    }\r\n\r\n    const data = {\r\n      id: this.state.user.id,\r\n      date: new Date(),\r\n      user_id: this.state.user.id,\r\n      text,\r\n    }\r\n\r\n    this.message = {...data};\r\n    utils.dispatcher(this.message);\r\n    this.setText('');\r\n  }\r\n\r\n  keyEvent({ keyCode }) {\r\n    if (keyCode === 13) {\r\n      this.dispatchMessage();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"board-sender\">\r\n        <input\r\n          onChange={(e) => this.setText(e.target.value)}\r\n          onKeyDown={(e) => this.keyEvent(e)}\r\n          value={this.state.text}\r\n          className=\"board-sender__input\"\r\n          placeholder=\"Enter a message...\"\r\n        />\r\n        <button\r\n          onClick={() => this.dispatchMessage()}\r\n          className=\"board-sender__btn\"\r\n        />\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nBoardSender.propTypes = {\r\n  user: PropTypes.object,\r\n};\r\n","import faker from \"faker\";\n\nexport const userUUIDs = [\n  faker.random.uuid(),\n  faker.random.uuid(),\n  faker.random.uuid(),\n  faker.random.uuid(),\n  faker.random.uuid(),\n  faker.random.uuid(),\n  faker.random.uuid(),\n  faker.random.uuid()\n];\n\nexport const UserNames = [\n  `${faker.name.firstName()}`,\n  `${faker.name.firstName()}`,\n  `${faker.name.firstName()}`,\n  `${faker.name.firstName()}`,\n  `${faker.name.firstName()}`,\n  `${faker.name.firstName()}`,\n  `${faker.name.firstName()}`,\n  `${faker.name.firstName()}`\n];\n\nexport const UserSurnames = [\n  `${faker.name.lastName()}`,\n  `${faker.name.lastName()}`,\n  `${faker.name.lastName()}`,\n  `${faker.name.lastName()}`,\n  `${faker.name.lastName()}`,\n  `${faker.name.lastName()}`,\n  `${faker.name.lastName()}`,\n  `${faker.name.lastName()}`\n];\n\nexport const UserAvatars = [\n  faker.image.avatar(),\n  faker.image.avatar(),\n  faker.image.avatar(),\n  faker.image.avatar(),\n  faker.image.avatar(),\n  faker.image.avatar(),\n  faker.image.avatar(),\n  faker.image.avatar()\n];\n\nexport const UserColors = [\n  faker.internet.color().replace('#','').toUpperCase(),\n  faker.internet.color().replace('#','').toUpperCase(),\n  faker.internet.color().replace('#','').toUpperCase(),\n  faker.internet.color().replace('#','').toUpperCase(),\n  faker.internet.color().replace('#','').toUpperCase(),\n  faker.internet.color().replace('#','').toUpperCase(),\n  faker.internet.color().replace('#','').toUpperCase(),\n  faker.internet.color().replace('#','').toUpperCase(),\n];\n\nexport class WebsocketMockAdapter {\n  constructor(subscriber, deelay = 1000) {\n    this.subscriber = subscriber;\n    this.deelay = deelay;\n  }\n\n  init() {\n    let count = 0;\n  \n    const initSub = setInterval(() => {\n      this.subscriber(this.createData());\n      count += 1;\n\n      if (count >= 15) {\n        clearInterval(initSub);\n      }\n    }, this.deelay);\n  }\n\n  createData() {\n    const index = faker.random.number({ min: 0, max: 7 });\n\n    return {\n      id: faker.random.uuid(),\n      //date: +faker.date.future(),\n      date: new Date(),\n      user_id: userUUIDs[index],\n      text: faker.lorem.words(7)\n    };\n  }\n\n  getUsers() {\n    const users = {};\n\n    for (let index = 0; index < 8; index++) {\n      users[userUUIDs[index]] = {\n        name: UserNames[index],\n        secname: UserSurnames[index],\n        color: UserColors[index],\n        avatar: `https://eu.ui-avatars.com/api/?name=${UserNames[index]}+${UserSurnames[index]}&background=${UserColors[index]}&&color=fff`,\n        id: userUUIDs[index]\n      }\n    }\n\n    // условно\n    users['12345'] = {\n      name: 'Test',\n      secname: 'Testovich',\n      color: 'FF8D00',\n      avatar: `https://eu.ui-avatars.com/api/?name=Test+Testovich&background=FF8D00&&color=fff`,\n      id: '12345'\n    }\n\n    return users;\n  }\n}\n","import Board from './Board';\r\n\r\nexport default Board;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Board.scss';\r\n\r\nimport BoardHeader from '../BoardHeader';\r\nimport BoardWindow from '../BoardWindow';\r\nimport BoardSender from '../BoardSender';\r\nimport { WebsocketMockAdapter } from '../../core/emmiter';\r\nimport utils from '../../utils';\r\n\r\nexport default class Board extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.mocks = new WebsocketMockAdapter(utils.dispatcher, 1000);\r\n    this.state = {\r\n      users: this.mocks.getUsers(),\r\n      token: this.props.token,\r\n      messages: [],\r\n    };\r\n  }\r\n\r\n  messageEventListener() {\r\n    document.addEventListener('message', ({ detail }) => {\r\n      this.setState((state) => {\r\n        const currentState = {...state};\r\n        currentState.messages.push(detail.message);\r\n        return currentState;\r\n      })\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.mocks.init();\r\n    this.messageEventListener();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"board\">\r\n        <BoardHeader users={this.state.users} />\r\n        <BoardWindow\r\n          token={this.state.token}\r\n          users={this.state.users}\r\n          messages={this.state.messages}\r\n        />\r\n        <BoardSender user={this.state.users[this.state.token]} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nBoard.propTypes = {\r\n  token: PropTypes.string,\r\n};\r\n","import Autorization from './Autorization';\r\n\r\nexport default Autorization;","import React, { Component } from 'react';\r\nimport './Autorization.scss';\r\n\r\nexport default class Autorization extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      login: '',\r\n      pass: '',\r\n      isError: false,\r\n    };\r\n\r\n    this.setInput = this.setInput.bind(this);\r\n  }\r\n\r\n  setInput(element) {\r\n    const { name, value } = element;\r\n\r\n    this.setState((state) => {\r\n      const currentState = {...state};\r\n      currentState[name] = value.trim();\r\n      return currentState;\r\n    });\r\n  }\r\n\r\n  dispatchData(event) {\r\n    event.preventDefault();\r\n\r\n    const login = 'test';\r\n    const pass = 'test';\r\n    const token = '12345';\r\n    let isError = false;\r\n\r\n    if (this.state.login !== login) {\r\n      isError = true;\r\n    }\r\n\r\n    if (this.state.pass !== pass) {\r\n      isError = true;\r\n    }\r\n\r\n    if (!isError) {\r\n      localStorage.setItem('authToken', token);\r\n      this.props.onLogin(token);\r\n      return;\r\n    }\r\n\r\n    this.setState((state) => {\r\n      const currentState = {...state};\r\n      currentState.isError = true;\r\n      return currentState;\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"login\">\r\n        <div className=\"login-title\">Enter in chat room</div>\r\n        <form className=\"login-form\">\r\n          <input\r\n            onChange={(e) => this.setInput(e.target)}\r\n            value={this.state.login}\r\n            name=\"login\"\r\n            className=\"login-form__input\"\r\n            placeholder=\"Your login\"\r\n          />\r\n          <input\r\n            onChange={(e) => this.setInput(e.target)}\r\n            value={this.state.pass}\r\n            name=\"pass\"\r\n            className=\"login-form__input login-form__input--last\"\r\n            placeholder=\"Your pass\"\r\n          />\r\n          {this.state.isError\r\n          ? <div className=\"login-form__error\">Wrong login or password</div>\r\n          : ''}\r\n          <button onClick={(e) => this.dispatchData(e)} className=\"login-form__btn\">Sign in</button>\r\n        </form>\r\n      </div>\r\n    )\r\n  };\r\n}\r\n","import React, { Component } from 'react';\n\nimport './App.scss';\nimport Board from './components/Board';\nimport Autorization from './components/Autorization';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      token: null\n    };\n\n    this.updateToken = this.updateToken.bind(this);\n  }\n\n  updateToken(token) {\n    this.setState((state) => {\n      const currentState = {...state};\n      currentState.token = token;\n      return currentState;\n    });\n  }\n\n  componentDidMount() {\n    const token = localStorage.getItem('authToken');\n\n    if (!token) {\n      return;\n    }\n\n    this.setState((state) => {\n      const currentState = {...state};\n      currentState.token = token;\n      return currentState;\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          {this.state.token\n            ? <Board token={this.state.token} />\n            : <Autorization onLogin={this.updateToken} />\n          }\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n// import './tasks';\n\nimport './index.css';\n\nReactDOM.render(<App/>, document.getElementById('root'));\n"],"sourceRoot":""}